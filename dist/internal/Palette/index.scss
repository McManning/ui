
// Generate a .brand-[name] class for every color
// as a background with complementary foreground
@each $color, $value in $brand {
    .brand-#{$color} {
        color: color-yiq($value);
        background-color: $value;
    }

    // All tints and shades.
    // e.g. .brand-disco-tint-40 and .brand-peach-shade-10
    @for $step from 1 through 9 {
        $percentage: $step * 10;

        .brand-#{$color}-tint-#{$percentage} {
            color: color-yiq(tint($value, $percentage));
            background-color: tint($value, $percentage);
        }

        .brand-#{$color}-shade-#{$percentage} {
            color: color-yiq(shade($value, $percentage));
            background-color: shade($value, $percentage);
        }
    }
}

.palette {
    margin-bottom: 1em;

    .palette-links {
        display: flex;
    }

    .palette-links button {
        flex: 1;

        border: none;
        font-weight: 400;
        line-height: 32px;
        min-width: 32px;
    }

    .palette-example {
        position: relative;
        padding: 16px;
        font-family: monospace;
        text-align: center;
        font-size: 1.25em;

        // Would be relevant if I could automatically convert
        // the color classes into hex strings to put into `content`.
        // But I don't see an easy way to do that in SASS.
        // &:after {
        //     font-size: 80%;
        //     position: absolute;
        //     bottom: 4px;
        //     right: 4px;
        //     opacity: 0.5;
        // }
    }
}
