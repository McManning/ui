{"version":3,"sources":["global.js","components/enhanced-input.js","components/lookup.js"],"names":["$","fn","datepicker","defaults","format","maxViewMode","orientation","autoclose","document","on","this","siblings","focus","NAME","VERSION","DATA_API_EVENT","PROVIDER","INPUT_EVENTS","DEFAULTS","Plugin","element","options","o","attr","error","setupDOM","attachEvents","update","prototype","constructor","proxy","counter","after","length","val","replace","html","option","ret","args","Array","apply","arguments","shift","each","opts","$this","data","extend","undefined","Constructor","version","e","preventDefault","call","jQuery","url","display","store","threshold","readonly","token","change","results","select","addon","clear","$parent","parent","next","term","is","search","json","target","resolvePath","removeAttr","that","setTimeout","displayResults","meta","total","type","id","attributes","name","i","append","path","obj","split","reduce"],"mappings":"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","file":"ui.min.js","sourcesContent":["/**\n * Global behaviors applied to ORIS UI components\n *\n * Be VERY careful when editing these. You do not want to\n * introduce new behavior that doesn't make sense for every\n * application that uses your components.\n */\n\n// Apply global configuration changes to bootstrap-datepicker\n$.fn.datepicker.defaults.format = 'mm/dd/yyyy';\n$.fn.datepicker.defaults.maxViewMode = 2; // years\n$.fn.datepicker.defaults.orientation = 'bottom auto';\n$.fn.datepicker.defaults.autoclose = true;\n\n// Binds to create as soon as jQuery is setup\n$(function globalBinds() {\n    // Ensure addon icons trigger the datepicker as well, as people\n    // may be inclined to click the icon instead of the input.\n    // Note this is done as a document bind so that datepickers\n    // late loaded into the DOM are also bound.\n    $(document).on(\n        'click',\n        'input[data-provide=\"datepicker\"] + .input-group-addon',\n        function clickHandler() {\n            $(this).siblings('input').focus();\n        }\n    );\n});\n","/**\r\n * Enhanced Inputs\r\n *\r\n * Adds a length counter widget to inputs (textareas, input type=\"text\")\r\n *\r\n * Usage:\r\n *\r\n *  $('textarea').EnhancedInput();\r\n *\r\n * Also accepts Bootstrap-style data attributes:\r\n *  data-provide=\"enhanced-input\" to enable on an input\r\n *\r\n */\r\n(function enhancedInputPlugin($) {\r\n    var NAME = 'EnhancedInput';\r\n    var VERSION = '1.0.0';\r\n\r\n    var DATA_API_EVENT = 'click.' + NAME + '.data-api';\r\n    var PROVIDER = '[data-provide=\"enhanced-input\"]';\r\n\r\n    // Events on the input/textarea that will update the counter\r\n    var INPUT_EVENTS = 'keyup keydown focus input paste';\r\n\r\n    var DEFAULTS = {\r\n        // Not applicable\r\n    };\r\n\r\n    var Plugin = function Plugin(element, options) {\r\n        this.o = options;\r\n        this.element = $(element);\r\n\r\n        // Make sure there's a maxlength (required attr)\r\n        if (!this.element.attr('maxlength')) {\r\n            $.error(\r\n                'You must specify maxlength for inputs using $.EnhancedInput'\r\n            );\r\n        }\r\n\r\n        this.setupDOM();\r\n        this.attachEvents();\r\n\r\n        // Setup initial count\r\n        this.update();\r\n    };\r\n\r\n    Plugin.prototype = {\r\n        constructor: Plugin,\r\n\r\n        attachEvents: function attachEvents() {\r\n            this.element.on(INPUT_EVENTS, $.proxy(this.update, this));\r\n        },\r\n\r\n        setupDOM: function setupDOM() {\r\n            // Add the counter to the DOM\r\n            this.counter = $('<div class=\"enhanced-input-counter\"/>');\r\n            this.element.after(this.counter);\r\n        },\r\n\r\n        update: function update() {\r\n            // Update textarea counter to reflect number of changes.\r\n            // Note that Chrome counts \\r\\n as 1 character in JS, but\r\n            // two when dealing with textarea[maxlength]. So we need\r\n            // to do some math changes to get this to count properly.\r\n            var length = this.element.val().replace(\r\n                /\\r(?!\\n)|\\n(?!\\r)/g,\r\n                '\\r\\n'\r\n            ).length;\r\n\r\n            this.counter.html(\r\n                length + '/' +\r\n                this.element.attr('maxlength')\r\n            );\r\n        }\r\n    };\r\n\r\n    // //////////////////////////\r\n    // jQuery Plugin Interface\r\n    // //////////////////////////\r\n    $.fn[NAME] = function wrapper(option) {\r\n        var args = Array.apply(null, arguments);\r\n        var ret;\r\n\r\n        args.shift();\r\n\r\n        this.each(function iterator() {\r\n            var $this = $(this);\r\n            var data = $this.data(NAME);\r\n            var options = typeof option === 'object' && option;\r\n            var opts;\r\n\r\n            if (!data) {\r\n                // Options priority: js args, data-api, defaults\r\n                opts = $.extend({}, DEFAULTS, $this.data(), options);\r\n\r\n                data = new Plugin(this, opts);\r\n                $this.data(NAME, data);\r\n                ret = data;\r\n            }\r\n\r\n            if (typeof option === 'string' && typeof data[option] === 'function') {\r\n                ret = data[option].apply(data, args);\r\n            }\r\n        });\r\n\r\n        if (ret === undefined || ret instanceof Plugin) {\r\n            return this;\r\n        }\r\n\r\n        return ret;\r\n    };\r\n\r\n    $.fn[NAME].defaults = DEFAULTS;\r\n    $.fn[NAME].Constructor = Plugin;\r\n    $.fn[NAME].version = VERSION;\r\n\r\n    // Fire off construction of any lookups using data-api immediately\r\n    $(document).on(\r\n        DATA_API_EVENT,\r\n        PROVIDER,\r\n        function handler(e) {\r\n            var $this = $(this);\r\n            if ($this.data(NAME)) {\r\n                return;\r\n            }\r\n\r\n            e.preventDefault();\r\n            $.fn[NAME].call($this, {});\r\n        });\r\n}(jQuery));\r\n","/**\n * Simple ass AJAX lookup\n *\n * Compatible with Bootstrap 4.0.0a4\n *\n * Usage:\n *\n *  $('.form-lookup').Lookup({\n *      url: 'source url'\n *  });\n *\n * Also accepts Bootstrap-style data attributes:\n *  data-provide=\"lookup\" to enable on an input\n *  data-url=\"https://...\" to bind a url\n *  ... etc\n *\n * Note that this expects the backend to conform to JSON-API spec.\n *\n * Upstream query will be:\n *      GET {url}?q={term}\n *      Accept: application/vnd.api+json\n *\n * Downstream responses expect to be formatted as:\n *      200 OK\n *      Content-Type: application/vnd.api+json\n *      {\n *           \"meta\": {\n *               \"total\": 55\n *           },\n *           \"data\": [\n *               {\n *                   \"type\": \"person\",\n *                   \"id\": \"200275154\",\n *                   \"attributes\": {\n *                       \"name\": \"McManning, Chase\"\n *                   }\n *               }\n *           ]\n *       }\n *\n * It can also supply an access token to the ORIS API through the\n * `token` parameter. Just make sure your token has the correct\n * permissions before attempting to perform lookup against an endpoint.\n *\n * Additional Notes:\n * - Response can be application/json for non-API endpoints\n * - Some API endpoints may support filter[] parameters.\n *   Check the API documentation for more information.\n */\n(function lookupPlugin($) {\n    var NAME = 'Lookup';\n    var VERSION = '1.0.0';\n\n    var DATA_API_EVENT = 'click.' + NAME + '.data-api';\n    var PROVIDER = '[data-provide=\"lookup\"]';\n\n    var DEFAULTS = {\n        url: null,                      // Endpoint URL to request AJAX data from\n\n        display: 'attributes.name',     // AJAX object attribute to display in the input upon select\n\n        store: 'id',                    // AJAX object attribute to submit alongside the form.\n                                        // If null, whatever is in the lookup input will be\n                                        // submitted with the form.\n\n        threshold: 3,                   // Minimum characters required before a search is started\n\n        readonly: true,                 // Whether to go readonly once something is selected\n\n        token: null                     // ORIS-API bearer token, if known.\n    };\n\n    var Plugin = function Plugin(element, options) {\n        this.o = options;\n        this.element = $(element);\n\n        this.setupDOM();\n        this.attachEvents();\n    };\n\n    Plugin.prototype = {\n        constructor: Plugin,\n\n        attachEvents: function attachEvents() {\n            this.element.on('keyup', $.proxy(this.change, this));\n            this.results.on('click', 'a', $.proxy(this.select, this));\n            this.addon.on('click', $.proxy(this.clear, this));\n        },\n\n        setupDOM: function setupDOM() {\n            var $parent = this.element.parent();\n\n            // Setup a hidden input for storing selection data\n            if (this.o.store) {\n                this.store = $(\n                    '<input type=\"hidden\" name=\"' +\n                    this.element.attr('name') + '\">'\n                );\n\n                this.element.attr('name', '');\n                $parent.after(this.store);\n            }\n\n            this.addon = this.element.next('.input-group-addon');\n\n            this.results = $('<div class=\"list-group lookup-results\"/>');\n            $parent.after(this.results);\n        },\n\n        change: function change() {\n            var term;\n\n            // Ignore change events if we're readonly\n            if (this.element.is('[readonly]')) {\n                return;\n            }\n\n            term = this.element.val();\n            if (term.length >= this.o.threshold) {\n                this.search(term);\n            } else {\n                this.results.html('');\n            }\n        },\n\n        select: function select(e) {\n            var json = $(e.target).data('json');\n\n            this.element.val(this.resolvePath(this.o.display, json));\n            this.results.html('');\n\n            this.element.focus();\n\n            // Readonly mode enabled? Disable the input\n            if (this.o.readonly) {\n                this.element.attr('readonly', 'readonly');\n                this.addon.html(\n                    '<i class=\"fa fa-close\" aria-hidden=\"true\"></i>'\n                );\n            }\n\n            // Store key in hidden input, if we choose to do so\n            if (this.o.store) {\n                this.store.val(this.resolvePath(this.o.store, json));\n            }\n\n            e.preventDefault();\n            return false;\n        },\n\n        clear: function clear(e) {\n            this.results.html('');\n            this.element.val('');\n            this.element.focus();\n\n            if (this.o.readonly) {\n                this.element.removeAttr('readonly');\n                this.addon.html(\n                    '<i class=\"fa fa-search\" aria-hidden=\"true\"></i>'\n                );\n            }\n\n            if (this.o.store) {\n                this.store.val('');\n            }\n\n            if (e) {\n                e.preventDefault();\n            }\n\n            return false;\n        },\n\n        search: function search(term) {\n            var that = this;\n\n            this.addon.html(\n                '<i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\"></i>'\n            );\n\n            // TODO: Replace mock with actual ajax\n            setTimeout(function demoTimeout() {\n                that.addon.html(\n                    '<i class=\"fa fa-search\" aria-hidden=\"true\"></i>'\n                );\n\n                that.displayResults({\n                    meta: {\n                        total: 56\n                    },\n                    data: [\n                        {\n                            type: 'person',\n                            id: 'junk',\n                            attributes: {\n                                name: term\n                            }\n                        },\n                        {\n                            type: 'person',\n                            id: '200275154',\n                            attributes: {\n                                name: 'McManning, Chase'\n                            }\n                        },\n                        {\n                            type: 'person',\n                            id: '123456789',\n                            attributes: {\n                                name: 'Ray, John'\n                            }\n                        }\n                    ]\n                });\n            }, 1000);\n        },\n\n        displayResults: function displayResults(json) {\n            var i;\n\n            this.results.html('');\n\n            for (i = 0; i < json.data.length; i++) {\n                this.results.append(\n                    $('<a href=\"#\" class=\"list-group-item list-group-action\">' +\n                        this.resolvePath(this.o.display, json.data[i]) +\n                        '</a>'\n                    ).data('json', json.data[i])\n                );\n            }\n\n            if (json.meta && json.meta.total) {\n                this.results.append(\n                    '<div class=\"lookup-total\">There are <strong>' +\n                    (json.meta.total - json.data.length) +\n                    '</strong> additional results. Please narrow your search</div>'\n                );\n            }\n        },\n\n        /**\n         * Utility function to resolve dot notation paths to JSON records.\n         *\n         * Source: http://stackoverflow.com/a/6394168\n         *\n         * @param {string} path period separated JSON path\n         * @param {object} obj JSON object to parse\n         *\n         * @returns {object} data within the JSON path\n         */\n        resolvePath: function resolvePath(path, obj) {\n            return path.split('.').reduce(function reduce(o, i) {\n                return o[i];\n            }, obj);\n        }\n    };\n\n    // //////////////////////////\n    // jQuery Plugin Interface\n    // //////////////////////////\n    $.fn[NAME] = function wrapper(option) {\n        var args = Array.apply(null, arguments);\n        var ret;\n\n        args.shift();\n\n        this.each(function iterator() {\n            var $this = $(this);\n            var data = $this.data(NAME);\n            var options = typeof option === 'object' && option;\n            var opts;\n\n            if (!data) {\n                // Options priority: js args, data-api, defaults\n                opts = $.extend({}, DEFAULTS, $this.data(), options);\n\n                data = new Plugin(this, opts);\n                $this.data(NAME, data);\n                ret = data;\n            }\n\n            if (typeof option === 'string' && typeof data[option] === 'function') {\n                ret = data[option].apply(data, args);\n            }\n        });\n\n        if (ret === undefined || ret instanceof Plugin) {\n            return this;\n        }\n\n        return ret;\n    };\n\n    $.fn[NAME].defaults = DEFAULTS;\n    $.fn[NAME].Constructor = Plugin;\n    $.fn[NAME].version = VERSION;\n\n    // Fire off construction of any lookups using data-api immediately\n    $(document).on(\n        DATA_API_EVENT,\n        PROVIDER,\n        function handler(e) {\n            var $this = $(this);\n            if ($this.data(NAME)) {\n                return;\n            }\n\n            e.preventDefault();\n            $.fn[NAME].call($this, {});\n        });\n}(jQuery));\n"]}