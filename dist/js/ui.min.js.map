{"version":3,"sources":["components/lookup.js"],"names":["$","PLUGIN_NAME","methods","init","options","fn","methodOrOptions","$this","args","arguments","ret","this","each","apply","Array","prototype","slice","call","error","$el","data","jQuery"],"mappings":";;;;;;;;;;;;;;;;CAgBA,SAAAA,GACA,GAAAC,GAAA,SAEAC,GACAC,KAAA,SAAAC,KAMAJ,GAAAK,GAAAJ,GAAA,SAAAK,GACA,GAEAC,GAFAC,EAAAC,UACAC,EAAAC,IAgBA,OAdAT,GAAAI,GAEAK,KAAAC,KAAA,WAGA,MAFAL,GAAAP,EAAAW,MACAD,EAAAR,EAAAI,GAAAO,MAAAN,EAAAO,MAAAC,UAAAC,MAAAC,KAAAT,EAAA,IACAE,IAAAH,IAEA,gBAAAD,IAAAA,EAKAN,EAAAkB,MAAA,WAAAZ,EAAA,8BAAAL,GAJAU,KAAAC,KAAA,WACA,MAAAV,GAAAC,KAAAU,MAAAb,EAAAW,MAAAH,KAKAE,GAIAV,EAAAK,GAAAJ,GAAA,KAAAA,GAAA,SAAAkB,GACA,MAAA,mBAAAA,GAAAC,KAAAnB,KAEAoB","file":"ui.min.js","sourcesContent":["/**\n * Simple ass AJAX lookup\n *\n * Compatible with Bootstrap 4.0.0a2\n *\n * Usage:\n *\n *  $('.form-lookup').Lookup({\n *      url: 'source url'\n *  });\n *\n * Also accepts Bootstrap-style data attributes:\n *  data-toggle=\"lookup\" to enable on an input\n *  data-url=\"https://...\" to bind a url\n *  ... etc\n */\n;(function ($) {\n    var PLUGIN_NAME = 'Lookup';\n\n    var methods = {\n        init : function (options) {\n            // Implementation! Woo!\n        }\n    };\n\n    // Declare the component as a jQuery plugin, executable on one or many\n    $.fn[PLUGIN_NAME] = function (methodOrOptions) {\n        var args = arguments;\n        var ret = this;\n        var $this;\n        if (methods[methodOrOptions]) {\n            // If a method returns a non-this, assume a getter. Break and return that value\n            this.each(function() {\n                $this = $(this);\n                ret = methods[methodOrOptions].apply($this, Array.prototype.slice.call(args, 1));\n                return ret === $this;\n            });\n        } else if (typeof methodOrOptions === 'object' || !methodOrOptions) {\n            this.each(function() {\n                return methods.init.apply($(this), args);\n            });\n        } else {\n            $.error('Method \"' +  methodOrOptions + '\" does not exist on jQuery.' + PLUGIN_NAME);\n        }\n        return ret;\n    };\n\n    // isType function to test if a DOM element already has this component attached.\n    $.fn[PLUGIN_NAME]['is' + PLUGIN_NAME] = function($el) {\n        return typeof $el.data(PLUGIN_NAME) !== 'undefined';\n    };\n}( jQuery ));\n"],"sourceRoot":"/source/"}