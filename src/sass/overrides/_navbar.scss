
.navbar {
    // Use .navbar-expand (horizontal flex) behavior by default
    @extend .navbar-expand;

    padding: 0.5em 2em;
    white-space: nowrap;

    // Alignment correction to ensure the top of the dropdown menu
    // is aligned against the bottom of the navbar
    .navbar-nav .dropdown-menu {
        margin-top: 9px;
    }

    // Application's main navbar. Styled slightly different
    // than inline navbars - with a bit more responsive behavior
    &.navbar-main {
        @extend .navbar-light;

        background-color: tint($gray, 5%);
        box-shadow: 0 2px 5px 0 transparentize($black, 0.92), 0 2px 10px 0 transparentize($black, 0.94);

        // Alternative link display - to treat them more like buttons
        .nav-item {
            margin: 0 0.25rem;

            &:hover {
                background: tint($gray, 10%);
            }

            &.active {
                // border-bottom: 2px solid #bb0000;
                background: tint($gray, 12%);
            }
        }

        // Adjustments to branding alignment
        .navbar-brand {
            padding: 0;
            padding-top: 0.1em;

            // Organization name (Office of Research) in the app header
            .navbar-org {
                display: block;
                font-size: 80%;
                line-height: 80%;
                color: $scarlet;
                padding: 0.1em 0;
            }
        }

        // Reduce edge padding for mobile
        @include media-breakpoint-down(sm) {
            padding: 0.5em 1em;
        }
    }

    // Flex the profile component to the right
    .profile {
        margin-left: auto;
    }

    // Specialized rules to flex AppSearch to the right and change
    // margin rules on profile if it comes after AppSearch in the DOM
    .app-search {
        margin-left: auto;
    }

    .app-search + .profile {
        margin-left: 2em;
    }

    // Flex inline forms to the right
    .form-inline {
        margin-left: auto;

        // Give a fixed margin if there's a .profile component after a .form-inline
        + .profile {
            margin-left: 0.75rem;
        }

        // Stylize navbar inputs to contrast with the nav background
        input {
            background: #eceeef;
            border-color: #eceeef;
            color: $gray;
            width: 15rem;

            &:focus {
                background: $white;
                border-color: $white;
                box-shadow: none;
            }
        }
    }

    // Styling for react-router-dom's <NavLink> components
    // as direct children to <Navbar>.
    // @todo I realize this :not logic is awful, and should be improved.
    > a:not(.navbar-brand) {
        color: rgba(0,0,0,0.5);
        padding: .5rem;
        margin: 0 0.25rem;

        &:hover {
            background: #f0f0f0;
            color: #292929;
        }

        &.active {
            color: #292929;
            background: #ededed;
        }
    }

    // Responsive Reflow

    // Will hide the navigation items (since they're displayed via Tab Bar)
    // shifts the inline form to fill the page width, and changes how the sticky
    // behavior works so only the inline form is visible while sticky is in effect
    @include media-breakpoint-down(sm) {
        justify-content: space-between;
        flex-wrap: wrap;

        .navbar-nav {
            display: none;
        }

        .form-inline {
            width: 100%;
            margin-top: 0.5rem;
            order: 3;
        }

        .input-group {
            width: 100%;
        }
    }
}
